#summary sqlite con jdbc

= Documentaci√≥n =
http://www.zentus.com/sqlitejdbc/


Ejemplo de http://luauf.com/2008/05/09/sqlite-en-java/
{{{
package sqlite;

import java.sql.*;

public class Main {

    public static void main(String[] args) {
        try {
            Class.forName("org.sqlite.JDBC");
            Connection conn = DriverManager.getConnection("jdbc:sqlite:C:\\sqlite\\libreria.sqlite");
           
            Statement stat = conn.createStatement();
            stat.execute("DELETE FROM autores");
           
            PreparedStatement prep = conn.prepareStatement("INSERT INTO autores (id_autor,nombre) VALUES (?, ?);");
            prep.setInt(1,1);
            prep.setString(2,"Deitel");
            prep.addBatch();
            prep.setInt(1,2);
            prep.setString(2,"Ceballos");
            prep.addBatch();
            prep.setInt(1,3);
            prep.setString(2,"Joyanes Aguilar");
            prep.addBatch();
           
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);

            ResultSet rs = stat.executeQuery("select * from autores;");
            while (rs.next()) {
                System.out.println("ID_AUTOR...: " + rs.getString("id_autor"));
                System.out.println("NOMBRE.....: " + rs.getString("nombre"));
                System.out.println("-----------------------------------");
            }
            rs.close();
            stat.close();
            conn.close();
             
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } catch (ClassNotFoundException ex) {
            System.out.println(ex.getMessage());
        }
     
    }
}
}}}
Ejemplo de http://www.zentus.com/sqlitejdbc/
{{{
import java.sql.*;

public class Test {
  public static void main(String[] args) throws Exception {
      Class.forName("org.sqlite.JDBC");
      Connection conn = DriverManager.getConnection("jdbc:sqlite:test.db");
      Statement stat = conn.createStatement();
      stat.executeUpdate("drop table if exists people;");
      stat.executeUpdate("create table people (name, occupation);");
      PreparedStatement prep = conn.prepareStatement(
          "insert into people values (?, ?);");

      prep.setString(1, "Gandhi");
      prep.setString(2, "politics");
      prep.addBatch();
      prep.setString(1, "Turing");
      prep.setString(2, "computers");
      prep.addBatch();
      prep.setString(1, "Wittgenstein");
      prep.setString(2, "smartypants");
      prep.addBatch();

      conn.setAutoCommit(false);
      prep.executeBatch();
      conn.setAutoCommit(true);

      ResultSet rs = stat.executeQuery("select * from people;");
      while (rs.next()) {
          System.out.println("name = " + rs.getString("name"));
          System.out.println("job = " + rs.getString("occupation"));
      }
      rs.close();
      conn.close();
  }
}
}}}