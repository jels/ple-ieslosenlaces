#summary Introducción a Java

<wiki:toc />

http://knuth.luther.edu/~bmiller/JavaForPython.html

= Java en Ubuntu =
  * http://www.guia-ubuntu.org/index.php?title=Java
  * InstalarEclipse

= Primeros pasos =
  * EjerciciosJava
  * Todo programa Java tiene que definir una clase. Todo el código está dentro de una clase.
  * Todo en Java tiene que tener un tipo predefinido.
  * Todo programa Java tiene que tener una función llamada {{{public static void main(String[] args)}}}.
  * Separación de bloques con llaves: {{{{}}}}
  * Indentación no obligatoria
  * final de sentencia: {{{;}}}
== Hola Mundo ==
{{{
public class HolaMundo {
    public static void main(String[] args) {
	System.out.println("Hola, Mundo");
	}
}
}}}
== Tipos de datos ==
== Numéricos ==
  * Tipos primitivos no son objetos en Java
  * Entrada y salida
== Import ==
Podemos usar cualquier clase con dos condiciones:
  # javac y java saben que la clase existe (directorio actual o CLASSPATH)
  # Nombre completo de la clase

Sistema jerárquico para acceder a las clases: paquete y clase.

El cargador se encarga de cargar las clases en memoria.
=== CLASSPATH ===
  # jar que contiene clases de java
  # directorios con ficheros de clases
== Scanner ==
{{{
import java.util.Scanner;
.hasNext()
.hasNextInt()
.hasNextFloat()
.hasNextDouble()
.nextInt()
.nextFloat()
.next()
.useDelimiter("\n")
}}}

== Cadenas ==
{{{String cadena;}}}
Equivalencias python - java
{{{
str[3] 	        str.charAt(3) 	
str[2:5] 	str.substring(2,4)
len(str) 	str.length() 	
str.find('x') 	str.indexOf('x')
str.split() 	str.split('s') 
str.split(',') 	str.split(',') 
str + str 	str.concat(str)
str.strip() 	str.trim() 	
}}}

== Listas ==
JavaListas

== Diccionarios ==
JavaDiccionarios

== Excepciones ==
{{{
try {
   código de riesgo, que puede dar problemas: abrir archivo ...
}
catch (Exception e) {
   Si ocurre un error en el bloque try, se lanza la excepción
   Aquí se captura la excepción
}
}}}

== Bucles ==
JavaBucles